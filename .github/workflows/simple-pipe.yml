# This workflow will build a Java project with Gradle initially
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Simple Pipe

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: greetings-jar
        path: build/libs
        
  execution:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.0
      with:
        # Artifact name
        name: greetings-jar
    - shell: bash
      run: |
        java -jar greetings-actions.jar ${{ github.event.inputs.myValues }}

  quality-check:
    runs-on: ubuntu-latest
    steps:
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1.6
      
  count-args:
    runs-on: ubuntu-latest
    steps:
    - id: report-count
      uses: vjvasu/arg-count-action@main
      with:
        arguments-to-count: ${{ github.event.inputs.myValues }}
    - run: echo
    - shell: bash
      run: |
        echo argument count is ${{ steps.report-count.outputs.arg-count }}
